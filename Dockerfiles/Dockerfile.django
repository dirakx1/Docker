# Example of a dockerfile with django interactions

FROM debian:stretch

MAINTAINER rafael.ortiz

## PROXY 
#ENV proxy  http://xx.xxx.xxx.xxx:8080


## LOCAL TIMEZONE
ENV TZ ":America/Bogota"

## SET THE PROXY TO USE WITH APT-GET
RUN echo "Acquire::http::Proxy \"${http_proxy}\";" > /etc/apt/apt.conf.d/80proxy

## CONFIGURE LOCALES
RUN apt-get update && apt-get install -y locales && \
	sed -i 's%^# en_US.UTF-8 UTF-8$%en_US.UTF-8 UTF-8%' /etc/locale.gen && \
	locale-gen
ENV LANG en_US.UTF-8

## UPDATE REPOSITORIES, INSTALL PIP AND BUILD DEPENDENCIES
RUN apt-get update && apt-get install -y \
	build-essential \
	curl		\
	git		\
	libgdal20	\
	libjpeg62-turbo-dev \
	libjpeg-dev	\
	libldap2-dev	\
	libpcre3	\
	libpcre3-dev	\
	libpq-dev	\
	libpython2.7	\
	libsasl2-dev	\
	libxml2-dev	\
	libxslt1-dev	\
	locales		\
	pandoc		\
	poppler-utils	\
	python		\
	python-dev	\
	smbclient	\
	wget		\
	zlib1g-dev

RUN curl -L --retry 5 https://files.pythonhosted.org/packages/ae/e8/2340d46ecadb1692a1e455f13f75e596d4eab3d11a57446f08259dee8f02/pip-10.0.1.tar.gz \
	> /tmp/pip-10.0.1.tar.gz 				&& \
	cd /tmp/ && tar xvzf pip-10.0.1.tar.gz && cd pip-10.0.1 && \
	python setup.py install				 	&& \
	cd .. && rm -rf pip-10.0.1.tar.gz pip-10.0.1

## VALUE BE devel OR master AS DEFINED IN THE COMPOSE FILE
ARG branch

## GET requirements.txt FROM GITLAB
COPY gitlab_deploy_key  /root/.ssh/id_rsa
RUN chmod 600 /root/.ssh/id_rsa && \
        echo "Host gitlab.net.com"   > /root/.ssh/config    && \
        echo "    StrictHostKeyChecking no"     >> /root/.ssh/config    && \
        echo "    UserKnownHostsFile /dev/null" >> /root/.ssh/config    && \
        cd /tmp/ && git clone git@example/example.git --branch ${branch} && \
        pip install requirements.txt     && \
        rm example -rf && rm /root/.ssh -rf

## REMOVE UNEEDED PACKAGES
#RUN apt-mark manual libpq5 && \
#	apt-get remove -y libjpeg62-dev zlib1g-dev python-dev libldap2-dev libsasl2-dev libpq-dev pandoc git wget libpcre3-dev && \
#	apt-get autoremove -y

## COPY ENTRYPOINT SCRIPT
COPY django-entrypoint.sh /docker-entrypoint.sh

## CREATE A SPACE TO MOUNT DATA AND MOVE TO IT
RUN mkdir /app
WORKDIR /app

## DO NOT RUN CELERY / GUNICORN AS ROOT
RUN groupadd -g 1000 -r django && useradd -r -u 1000 -g django django
USER django

ENTRYPOINT ["/docker-entrypoint.sh"]
